<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Preview - Tile Server</title>
  <link rel="stylesheet" type="text/css" href="{{base_url}}/index.css" />
  <script>
    const baseURL = "{{base_url}}";

    function toggleURL(id, event) {
      event.preventDefault();

      const el = document.getElementById(id);

      if (el.style.display === "none") {
        el.style.display = "inline-block";
      } else {
        el.style.display = "none";
      }
    }

    function copyToClipboard(el) {
      el.select();

      document.execCommand("copy");

      setTimeout(() => {
        el.style.display = "none";
      }, 200);
    }

    function scrollToTop(event) {
      event.preventDefault();

      window.scrollTo({
        top: 0,
        behavior: "smooth",
      });
    }

    function switchTab(event, tabId) {
      document.querySelectorAll(".tab").forEach(tab => {
        tab.classList.remove("active");
      });

      document.querySelectorAll(".tab-content").forEach(content => {
        content.classList.remove("active");
      });

      event.currentTarget.classList.add("active");

      document.getElementById(tabId).classList.add("active");

      if (tabId === "styles-tab" && !document.querySelector("#styles-tab").innerHTML.trim()) {
        renderDatas("styles-tab");
      } else if (tabId === "datas-tab" && !document.querySelector("#datas-tab").innerHTML.trim()) {
        renderDatas("datas-tab");
      } else if (tabId === "fonts-tab" && !document.querySelector("#fonts-tab").innerHTML.trim()) {
        renderDatas("fonts-tab");
      } else if (tabId === "sprites-tab" && !document.querySelector("#sprites-tab").innerHTML.trim()) {
        renderDatas("sprites-tab");
      } else if (tabId === "sync-tab" && !document.querySelector("#sync-tab").innerHTML.trim()) {
        renderDatas("sync-tab");
      }
    }

    function renderDatas(tabId) {
      if (tabId === "styles-tab") {
        document.querySelector("#styles-tab").innerHTML = `
          <div class="box">
            {{#each styles}}
              <div class="item">
                {{#if thumbnail}}<img src="{{thumbnail}}" alt="{{name}} preview" />{{else}}<img src="${baseURL}/images/placeholder.png" alt="{{name}} preview" />{{/if}}
                <div class="details">
                  <h3 class="name">{{name}}</h3>
                  <p class="identifier">identifier: {{@key}}</p>
                  <p class="services">
                    services: <a href="${baseURL}/styles/{{@key}}/style.json">StyleJSON</a>
                    {{#if thumbnail}}
                      | <a href="${baseURL}/styles/{{@key}}.json">TileJSON</a>
                      | <a href="${baseURL}/styles/{{@key}}/wmts.xml">WMTS</a>
                    {{/if}}
                    {{#if xyz}}
                      | <a href="#" onclick="toggleURL('xyz_style_{{@key}}', event)">XYZ</a>
                      <input id="xyz_style_{{@key}}" style="display:none;cursor:pointer;" type="text" value="{{xyz}}" onclick="copyToClipboard(this)" />
                    {{/if}}
                  </p>
                </div>
                <div class="viewers">
                    <a class="btn" href="${baseURL}/styles/{{@key}}/?vector{{viewer_hash}}">Client Render</a>
                    {{#if thumbnail}}
                      <a class="btn" href="${baseURL}/styles/{{@key}}/?raster{{viewer_hash}}">Backend Render</a>
                    {{/if}}
                </div>
              </div>
            {{/each}}
          </div>
        `;
      } else if (tabId === "datas-tab") {
        document.querySelector("#datas-tab").innerHTML = `
          <div class="box">
            {{#each datas}}
              <div class="item">
                {{#if thumbnail}}<img src="{{thumbnail}}" alt="{{name}} preview" />{{else}}<img src="${baseURL}/images/placeholder.png" alt="{{name}} preview" />{{/if}}
                <div class="details">
                  <h3 class="name">{{name}}</h3>
                  <div class="identifier">identifier: {{@key}}</div>
                  <div class="identifier">type: {{#if thumbnail}}raster{{else}}vector{{/if}}</div>
                  <div class="identifier">ext: {{source_type}}</div>
                  <p class="services">
                    services: <a href="${baseURL}/datas/{{@key}}.json">TileJSON</a>
                    {{#if xyz}}
                      | <a href="#" onclick="toggleURL('xyz_data_{{@key}}', event)">XYZ</a>
                      <input id="xyz_data_{{@key}}" style="display:none;cursor:pointer;" type="text" value="{{xyz}}" onclick="copyToClipboard(this)" />
                    {{/if}}
                  </p>
                </div>
                <div class="viewers">
                  {{#if thumbnail}}
                      <a class="btn" href="${baseURL}/datas/{{@key}}/{{viewer_hash}}">View</a>
                  {{else}}
                      <a class="btn" href="${baseURL}/datas/{{@key}}/{{viewer_hash}}">Inspect</a>
                  {{/if}}
                </div>
              </div>
            {{/each}}
          </div>
        `;
      } else if (tabId === "fonts-tab") {
        document.querySelector("#fonts-tab").innerHTML = `
          <div class="box">
            {{#each fonts}}
              <div class="item">
                <img src="${baseURL}/images/placeholder.png" alt="Empty image" />
                <div class="details">
                  <h3 class="name">{{name}}</h3>
                  <div class="identifier">identifier: {{@key}}</div>
                  <p class="services">
                    <a href="#" onclick="toggleURL('font_{{@key}}', event)">URL</a>
                    <input id="font_{{@key}}" style="display:none;cursor:pointer;" type="text" value="{{font}}" onclick="copyToClipboard(this)" />
                  </p>
                </div>
              </div>
            {{/each}}
          </div>
        `;
      } else if (tabId === "sprites-tab") {
        document.querySelector("#sprites-tab").innerHTML = `
          <div class="box">
            {{#each sprites}}
              <div class="item">
                <img src="{{thumbnail}}" alt="{{name}} preview" />
                <div class="details">
                  <h3 class="name">{{name}}</h3>
                  <div class="identifier">identifier: {{@key}}</div>
                  <p class="services">
                    services: <a href="${baseURL}/sprites/{{@key}}/sprite.json">JSON</a>
                    | <a href="${baseURL}/sprites/{{@key}}/sprite.png">PNG</a>
                    | <a href="#" onclick="toggleURL('sprite_{{@key}}', event)">URL</a>
                    <input id="sprite_{{@key}}" style="display:none;cursor:pointer;" type="text" value="{{sprite}}" onclick="copyToClipboard(this)" />
                  </p>
                </div>
              </div>
            {{/each}}
          </div>
        `;
      } else if (tabId === "sync-tab") {
        document.querySelector("#sync-tab").innerHTML = `
          <div class="box">
            <div class="item">
              <img src="${baseURL}/images/placeholder.png" alt="Empty image" />
              <div class="details">
                <h3 class="name">Cancel sync</h3>
                <div class="identifier">Cancel clean up or seed styles and datas</div>
              </div>
              <div class="viewers">
                <a class="btn" href="#" onclick="synchronousManager(event, 'cancel')">Cancel sync</a>
              </div>
            </div>
          </div>
          <div class="box">
            <div class="item">
              <img src="${baseURL}/images/placeholder.png" alt="Empty image" />
              <div class="details">
                <h3 class="name">Sync all</h3>
                <div class="identifier">Start clean up styles and datas then seed styles and datas</div>
              </div>
              <div class="viewers">
                <a class="btn" href="#" onclick="synchronousManager(event, 'all')">Sync all</a>
              </div>
            </div>  
          </div>
          <div class="box">
            <div class="item">
              <img src="${baseURL}/images/placeholder.png" alt="Empty image" />
              <div class="details">
                <h3 class="name">Clean styles</h3>
                <div class="identifier">Start clean up styles</div>
              </div>
              <div class="viewers">
                <a class="btn" href="#" onclick="synchronousManager(event, 'cleanUpStyles')">Clean styles</a>
              </div>
            </div>
          </div>
          <div class="box">
            <div class="item">
              <img src="${baseURL}/images/placeholder.png" alt="Empty image" />
              <div class="details">
                <h3 class="name">Clean datas</h3>
                <div class="identifier">Start clean up datas</div>
              </div>
              <div class="viewers">
                <a class="btn" href="#" onclick="synchronousManager(event, 'cleanUpDatas')">Clean datas</a>
              </div>
            </div>
          </div>
          <div class="box">
            <div class="item">
              <img src="${baseURL}/images/placeholder.png" alt="Empty image" />
              <div class="details">
                <h3 class="name">Seed styles</h3>
                <div class="identifier">Start seed styles</div>
              </div>
              <div class="viewers">
                <a class="btn" href="#" onclick="synchronousManager(event, 'seedStyles')">Seed styles</a>
              </div>
            </div>
          </div>
          <div class="box">
            <div class="item">
              <img src="${baseURL}/images/placeholder.png" alt="Empty image" />
              <div class="details">
                <h3 class="name">Seed datas</h3>
                <div class="identifier">Start seed datas</div>
              </div>
              <div class="viewers">
                <a class="btn" href="#" onclick="synchronousManager(event, 'seedDatas')">Seed datas</a>
              </div>
            </div>
          </div>
        `;
      }
    }

    function restartServer(event) {
      event.preventDefault();

      fetch(`${baseURL}/restart`, {
        method: "GET",
      })
        .then((response) => {
          if (response.status === 200) {
            alert("Server restarted successfully!");
          } else {
            alert(`Failed to restart server: Status code: ${response.status} - ${response.statusText}`);
          }
        })
        .catch((error) => alert(`Failed to restart server: ${error.message}`))
    }

    function synchronousManager(event, action) {
      event.preventDefault();

      if (action === "all") {
        fetch(`${baseURL}/tasks/start?seedStyles=true&cleanUpStyles=true&cleanUpDatas=true&seedDatas=true`, {
          method: "GET",
        })
          .then((response) => {
            if (response.status === 200) {
              alert("Starting clean up styles and datas then seed styles and datas...");
            } else {
              alert(`Failed to clean up styles and datas then seed styles and datas: Status code: ${response.status} - ${response.statusText}`);
            }
          })
          .catch((error) => alert(`Failed to seed styles and datas: ${error.message}`))
      } else if (action === "cleanUpStyles") {
        fetch(`${baseURL}/tasks/start?cleanUpStyles=true`, {
          method: "GET",
        })
          .then((response) => {
            if (response.status === 200) {
              alert("Starting clean up styles...");
            } else {
              alert(`Failed to clean up styles: Status code: ${response.status} - ${response.statusText}`);
            }
          })
          .catch((error) => alert(`Failed to clean up styles: ${error.message}`))
      } else if (action === "cleanUpDatas") {
        fetch(`${baseURL}/tasks/start?cleanUpDatas=true`, {
          method: "GET",
        })
          .then((response) => {
            if (response.status === 200) {
              alert("Starting clean up datas...");
            } else {
              alert(`Failed to clean up datas: Status code: ${response.status} - ${response.statusText}`);
            }
          })
          .catch((error) => alert(`Failed to clean up datas: ${error.message}`))
      } else if (action === "seedStyles") {
        fetch(`${baseURL}/tasks/start?seedStyles=true`, {
          method: "GET",
        })
          .then((response) => {
            if (response.status === 200) {
              alert("Starting seed styles...");
            } else {
              alert(`Failed to seed styles: Status code: ${response.status} - ${response.statusText}`);
            }
          })
          .catch((error) => alert(`Failed to seed styles: ${error.message}`))
      } else if (action === "seedDatas") {
        fetch(`${baseURL}/tasks/start?seedDatas=true`, {
          method: "GET",
        })
          .then((response) => {
            if (response.status === 200) {
              alert("Starting seed datas...");
            } else {
              alert(`Failed to seed datas: Status code: ${response.status} - ${response.statusText}`);
            }
          })
          .catch((error) => alert(`Failed to seed datas: ${error.message}`))
      } else if (action === "cancel") {
        fetch(`${baseURL}/tasks/cancel`, {
          method: "GET",
        })
          .then((response) => {
            if (response.status === 200) {
              alert("Canceling clean up or seed styles and datas...");
            } else {
              alert(`Failed to cancel clean up or seed styles and datas: Status code: ${response.status} - ${response.statusText}`);
            }
          })
          .catch((error) => alert(`Failed to clean up or seed styles and datas: ${error.message}`))
      }
    }

    window.onload = function () {
      renderDatas("styles-tab");
    };

    window.addEventListener("scroll", () => {
      const backToTopButton = document.querySelector(".back-to-top");

      if (window.scrollY > 200) {
        backToTopButton.style.display = "flex";
      } else {
        backToTopButton.style.display = "none";
      }
    });
  </script>
</head>

<body>
  <section>
    <h1 class="title">Tile server preview</h1>
    <div class="tabs">
      <div class="tab active" onclick="switchTab(event, 'styles-tab')">STYLES ({{style_count}})</div>
      <div class="tab" onclick="switchTab(event, 'datas-tab')">DATAS ({{data_count}})</div>
      <div class="tab" onclick="switchTab(event, 'fonts-tab')">FONTS ({{font_count}})</div>
      <div class="tab" onclick="switchTab(event, 'sprites-tab')">SPRITES ({{sprite_count}})</div>
      <div class="tab" onclick="switchTab(event, 'sync-tab')">SYNCHRONOUS</div>
      <div class="tab" onclick="restartServer(event)">RESTART</div>
    </div>
    <div id="styles-tab" class="tab-content active"></div>
    <div id="datas-tab" class="tab-content"></div>
    <div id="fonts-tab" class="tab-content"></div>
    <div id="sprites-tab" class="tab-content"></div>
    <div id="sync-tab" class="tab-content"></div>
  </section>
  <a href="#" class="back-to-top" onclick="scrollToTop(event)">Back to top</a>
</body>

</html>